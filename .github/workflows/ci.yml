name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests
      run: |
        cd backend
        # Create a .env file with test configuration
        echo "APP_ENV=test" > .env
        echo "SECRET_KEY=test_secret_key_for_ci" >> .env
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
        echo "API_PREFIX=/api" >> .env
        echo "CORS_ORIGINS=http://localhost:5173" >> .env
        # Add the current directory to PYTHONPATH
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        # Run all tests now that we've fixed the failing ones
        pytest --cov=app

  lint-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Lint Python code
      run: |
        cd backend
        # Use a more permissive flake8 configuration for CI
        echo "[flake8]
        max-line-length = 150
        exclude = .git,__pycache__,venv,build,dist
        ignore = E302,E305,W291,W292,W293,E501,F401
        per-file-ignores =
            __init__.py:F401" > .flake8.ci

        flake8 --config=.flake8.ci .
        black --check .
        isort --check .

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend/web
        npm ci

    - name: Lint JavaScript/Svelte code
      run: |
        cd frontend/web
        npx eslint . --no-error-on-unmatched-pattern
        npx prettier --config .prettierrc --check .

    - name: Build frontend
      run: |
        cd frontend/web
        # Create a .env file with test configuration
        echo "VITE_API_URL=http://localhost:8000/api" > .env
        echo "VITE_ENABLE_AUTH=true" >> .env
        echo "VITE_ENABLE_SHARING=true" >> .env
        echo "VITE_APP_ENV=test" >> .env
        npm run build
