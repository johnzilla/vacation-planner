name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd backend
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run tests
      run: |
        cd backend
        # Create a .env file with test configuration
        echo "APP_ENV=test" > .env
        echo "SECRET_KEY=test_secret_key_for_ci" >> .env
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> .env
        echo "API_PREFIX=/api" >> .env
        echo "CORS_ORIGINS=http://localhost:5173" >> .env
        pytest --cov=app

  lint-backend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Lint Python code
      run: |
        cd backend
        flake8 --config=.flake8 .
        black --check .
        isort --check .

  build-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend/web
        npm ci

    - name: Lint JavaScript/Svelte code
      run: |
        cd frontend/web
        # Create a temporary eslint.config.js file for ESLint v9
        echo "import js from '@eslint/js';
        import sveltePlugin from 'eslint-plugin-svelte';

        export default [
          js.configs.recommended,
          {
            files: ['**/*.svelte'],
            plugins: { svelte: sveltePlugin },
            languageOptions: {
              parser: sveltePlugin.parser,
              parserOptions: {
                extraFileExtensions: ['.svelte']
              }
            },
            rules: sveltePlugin.configs.recommended.rules
          },
          {
            rules: {
              'no-unused-vars': ['error', { 'argsIgnorePattern': '^_' }],
              'no-console': ['warn', { allow: ['warn', 'error'] }]
            }
          }
        ];" > eslint.config.js

        npx eslint .
        npx prettier --config .prettierrc --check .

    - name: Build frontend
      run: |
        cd frontend/web
        npm run build
